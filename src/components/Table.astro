---
export interface Props {
  data: Array<Record<string, any>>;
  headers?: string[];
  highlightFirst?: boolean;
  maxRows?: number;
}

const { data, headers, highlightFirst = false, maxRows = 3 } = Astro.props;
const displayData = data.slice(0, maxRows);
---

<div class="text-xs sm:text-sm overflow-x-auto">
  <div class="min-w-max w-full">
    <table class="w-full border-collapse">
      <thead>
        <tr class="border-b border-white/10">
          {(headers || Object.keys(data[0] || {})).map((header) => (
            <th class="px-3 py-2 sm:px-4 sm:py-3 text-gray text-center font-medium sticky top-0">
              {header}
            </th>
          ))}
        </tr>
      </thead>
      <tbody>
        {displayData.map((row, rowIndex) => (
          <tr class={`hover:bg-white/5 transition-colors ${highlightFirst && rowIndex === 0 ? 'text-yellow-500 font-semibold' : ''}`}>
            {Object.values(row).map((cell) => (
              <td class="px-3 py-2 sm:px-4 sm:py-3 text-center border-b border-white/5 whitespace-nowrap">
                {cell}
              </td>
            ))}
          </tr>
        ))}
      </tbody>
    </table>
  </div>
</div>

<style>
  .overflow-x-auto {
    scrollbar-width: thin;
    scrollbar-color: rgba(255,255,255,0.2) transparent;
  }
  .overflow-x-auto::-webkit-scrollbar {
    height: 6px;
  }
  .overflow-x-auto::-webkit-scrollbar-thumb {
    background-color: rgba(255,255,255,0.2);
    border-radius: 3px;
  }
</style>